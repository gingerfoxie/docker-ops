#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è Docker-—Å–µ—Ä–≤–∏—Å–∞ –∏–∑ –±—ç–∫–∞–ø–∞
# –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ volume –∏ –±—ç–∫–∞–ø–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö

set -euo pipefail

# === –ù–ê–°–¢–†–û–ô–ö–ê: –£–∫–∞–∂–∏—Ç–µ –∏–º—è –ø—Ä–æ–µ–∫—Ç–∞ Docker Compose ===
PROJECT_NAME="my-poject"
# ===================================================

usage() {
    cat <<EOF
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 --service <–∏–º—è_—Å–µ—Ä–≤–∏—Å–∞> --compose <–ø—É—Ç—å_–∫_docker-compose.yml> --env <–ø—É—Ç—å_–∫_.env> [--backup <–ø—É—Ç—å_–∫_–±—ç–∫–∞–ø—É>]

–ü—Ä–∏–º–µ—Ä—ã:
    $0 --service my-poject_frontend --compose ./docker-compose.yml --env ./.env
    $0 --service my-poject_frontend --compose ./docker-compose.yml --env ./.env --backup ./backups/my-poject_frontend/volume_20231201_120000.tar.gz

–û–ø—Ü–∏–∏:
    --service   –ò–º—è —Å–µ—Ä–≤–∏—Å–∞ (–∫–∞–∫ –≤ docker-compose.yml)
    --compose   –ü—É—Ç—å –∫ docker-compose.yml
    --env       –ü—É—Ç—å –∫ .env —Ñ–∞–π–ª—É
    --backup    –ü—É—Ç—å –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –±—ç–∫–∞–ø—É (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    --help      –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
EOF
    exit 1
}

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
SERVICE_NAME=""
COMPOSE_FILE=""
ENV_FILE=""
BACKUP_FILE=""

# –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
TEMP=$(getopt -o '' --long service:,compose:,env:,backup:,help -- "$@")
if [ $? -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --help."
    exit 1
fi

eval set -- "$TEMP"

while true; do
    case "$1" in
        --service)
            SERVICE_NAME="$2"
            shift 2
            ;;
        --compose)
            COMPOSE_FILE="$2"
            shift 2
            ;;
        --env)
            ENV_FILE="$2"
            shift 2
            ;;
        --backup)
            BACKUP_FILE="$2"
            shift 2
            ;;
        --help)
            usage
            ;;
        --)
            shift
            break
            ;;
        *)
            echo "‚ùå –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞!"
            exit 1
            ;;
    esac
done

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
if [ -z "$SERVICE_NAME" ] || [ -z "$COMPOSE_FILE" ] || [ -z "$ENV_FILE" ]; then
    echo "‚ùå –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: --service, --compose, --env"
    usage
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤
for file in "$COMPOSE_FILE" "$ENV_FILE"; do
    if [ ! -f "$file" ]; then
        echo "‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $file"
        exit 1
    fi
done

# –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –±—ç–∫–∞–ø–æ–≤
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
BACKUP_BASE_DIR="$SCRIPT_DIR/backups"
BACKUP_SERVICE_DIR="$BACKUP_BASE_DIR/$SERVICE_NAME"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ docker-compose —Å –æ–±—â–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
dc() {
    docker-compose -p "$PROJECT_NAME" -f "$COMPOSE_FILE" --env-file "$ENV_FILE" "$@"
}

# === –ù–∞—á–∞–ª–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è ===
echo "=== üîÅ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞: $SERVICE_NAME ==="
echo "üì¶ –ü—Ä–æ–µ–∫—Ç: $PROJECT_NAME"
echo "üìÑ Docker-compose: $COMPOSE_FILE"
echo "üîê Env —Ñ–∞–π–ª: $ENV_FILE"

if [ -n "$BACKUP_FILE" ]; then
    echo "üìÇ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –±—ç–∫–∞–ø: $BACKUP_FILE"
else
    echo "üìÇ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä –±—ç–∫–∞–ø–∞ –∏–∑: $BACKUP_SERVICE_DIR"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–∏—Å
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Å–µ—Ä–≤–∏—Å–∞ '$SERVICE_NAME'..."
dc config --services | grep -q "^$SERVICE_NAME$" || {
    echo "‚ùå –°–µ—Ä–≤–∏—Å '$SERVICE_NAME' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ docker-compose.yml"
    echo
    echo "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:"
    echo "---------------------"
    dc config --services || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–∏—Å–æ–≤."
    echo "---------------------"
    exit 1
}

# === –í—ã–±–æ—Ä –±—ç–∫–∞–ø–∞ ===
if [ -n "$BACKUP_FILE" ]; then
    if [ ! -f "$BACKUP_FILE" ]; then
        echo "‚ùå –£–∫–∞–∑–∞–Ω–Ω—ã–π –±—ç–∫–∞–ø –Ω–µ –Ω–∞–π–¥–µ–Ω: $BACKUP_FILE"
        exit 1
    fi
    SELECTED_BACKUP="$BACKUP_FILE"
else
    # –ü–æ–∏—Å–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±—ç–∫–∞–ø–æ–≤
    if [ ! -d "$BACKUP_SERVICE_DIR" ] || [ -z "$(ls -A "$BACKUP_SERVICE_DIR")" ]; then
        echo "‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –±—ç–∫–∞–ø–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –ø—É—Å—Ç–∞: $BACKUP_SERVICE_DIR"
        exit 1
    fi

    echo "üîç –î–æ—Å—Ç—É–ø–Ω—ã–µ –±—ç–∫–∞–ø—ã:"
    echo "--------------------"
    BACKUP_LIST=()
    BACKUP_INDEX=1
    for backup in "$BACKUP_SERVICE_DIR"/*.tar.gz "$BACKUP_SERVICE_DIR"/*.sql; do
        if [ -f "$backup" ]; then
            echo "$BACKUP_INDEX) $(basename "$backup")"
            BACKUP_LIST+=("$backup")
            ((BACKUP_INDEX++))
        fi
    done
    echo "--------------------"

    if [ ${#BACKUP_LIST[@]} -eq 0 ]; then
        echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –±—ç–∫–∞–ø–æ–≤ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: $BACKUP_SERVICE_DIR"
        exit 1
    fi

    # –í—ã–±–æ—Ä –±—ç–∫–∞–ø–∞
    while true; do
        read -p "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –±—ç–∫–∞–ø–∞ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è (1-${#BACKUP_LIST[@]}): " CHOICE
        if [[ "$CHOICE" =~ ^[0-9]+$ ]] && [ "$CHOICE" -ge 1 ] && [ "$CHOICE" -le ${#BACKUP_LIST[@]} ]; then
            SELECTED_BACKUP="${BACKUP_LIST[$((CHOICE-1))]}"
            break
        else
            echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ ${#BACKUP_LIST[@]}"
        fi
    done
fi

echo "‚úÖ –í—ã–±—Ä–∞–Ω –±—ç–∫–∞–ø: $(basename "$SELECTED_BACKUP")"

# === –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –±—ç–∫–∞–ø–∞ ===
if [[ "$SELECTED_BACKUP" == *.sql ]]; then
    BACKUP_TYPE="database"
    echo "üíæ –¢–∏–ø –±—ç–∫–∞–ø–∞: –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö PostgreSQL"
elif [[ "$SELECTED_BACKUP" == *.tar.gz ]]; then
    BACKUP_TYPE="container"
    echo "üíæ –¢–∏–ø –±—ç–∫–∞–ø–∞: –§–∞–π–ª–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"
else
    echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –±—ç–∫–∞–ø–∞: $SELECTED_BACKUP"
    exit 1
fi

# === –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö ===
if [ "$BACKUP_TYPE" = "database" ]; then
    if [[ ! "$SERVICE_NAME" =~ (db|postgres|database|mysql|mongo) ]]; then
        echo "‚ùå –ë—ç–∫–∞–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –º–æ–∂–µ—Ç –±—ã—Ç—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–µ—Ä–≤–∏—Å–æ–≤ –ë–î"
        exit 1
    fi

    echo "üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–∑: $(basename "$SELECTED_BACKUP")"
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–∞
    echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ –ë–î..."
    dc stop "$SERVICE_NAME" >/dev/null 2>&1 || true
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏–∑ .env
    DB_NAME=$(grep "^POSTGRES_DB=" "$ENV_FILE" | cut -d'=' -f2)
    DB_USER=$(grep "^POSTGRES_USER=" "$ENV_FILE" | cut -d'=' -f2)
    
    if [ -z "$DB_NAME" ] || [ -z "$DB_USER" ]; then
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ë–î –∏–∑ .env"
        exit 1
    fi
    
    # –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –≤ —Ä–µ–∂–∏–º–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
    echo "üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è..."
    dc up -d "$SERVICE_NAME"
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ PostgreSQL
    echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ PostgreSQL..."
    sleep 10
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ ID –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    DB_CONTAINER_ID=$(dc ps -q "$SERVICE_NAME" 2>/dev/null || true)
    if [ -z "$DB_CONTAINER_ID" ]; then
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –ë–î"
        exit 1
    fi
    
    # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    echo "üì¶ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..."
    docker cp "$SELECTED_BACKUP" "$DB_CONTAINER_ID":/tmp/restore.sql
    
    # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    echo "üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    if docker exec "$DB_CONTAINER_ID" psql -U "$DB_USER" -d "$DB_NAME" -f /tmp/restore.sql; then
        echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
        # –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        docker exec "$DB_CONTAINER_ID" rm -f /tmp/restore.sql 2>/dev/null || true
        echo "‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
    else
        echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö!"
        exit 1
    fi
    
    exit 0
fi

# === –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ ===
if [ "$BACKUP_TYPE" = "container" ]; then
    echo "üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–∑: $(basename "$SELECTED_BACKUP")"
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–∞
    echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–∞..."
    dc stop "$SERVICE_NAME" >/dev/null 2>&1 || true
    
    # –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    echo "üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
    dc rm -f "$SERVICE_NAME" >/dev/null 2>&1 || true
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å —Ç–µ–º –∂–µ –æ–±—Ä–∞–∑–æ–º
    echo "üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
    dc up -d "$SERVICE_NAME"
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
    sleep 5
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ ID –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    NEW_CONTAINER_ID=$(dc ps -q "$SERVICE_NAME" 2>/dev/null || true)
    if [ -z "$NEW_CONTAINER_ID" ]; then
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"
        exit 1
    fi
    
    echo "‚úÖ –ù–æ–≤—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–æ–∑–¥–∞–Ω: $NEW_CONTAINER_ID"
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    dc stop "$SERVICE_NAME" >/dev/null 2>&1 || true
    
    # –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –±—ç–∫–∞–ø–∞ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    echo "üì¶ –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –±—ç–∫–∞–ø–∞ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..."
    if zcat "$SELECTED_BACKUP" | docker exec -i "$NEW_CONTAINER_ID" tar -C / --exclude=proc --exclude=sys --exclude=dev --exclude=tmp -xf - 2>/dev/null; then
        echo "‚úÖ –§–∞–π–ª–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ —É—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
    else
        echo "‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –≤–æ–∑–º–æ–∂–Ω—ã –æ—à–∏–±–∫–∏ –ø—Ä–∏ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–µ (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π)"
    fi
    
    # –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –ø–æ—Å–ª–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
    echo "üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –ø–æ—Å–ª–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è..."
    dc up -d "$SERVICE_NAME"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞..."
    sleep 3
    if dc ps "$SERVICE_NAME" | grep -q "Up "; then
        echo "‚úÖ –°–µ—Ä–≤–∏—Å '$SERVICE_NAME' —É—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω"
        echo "‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
    else
        echo "‚ùå –°–µ—Ä–≤–∏—Å '$SERVICE_NAME' –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏:"
        dc logs "$SERVICE_NAME"
        exit 1
    fi
fi

# === –§–∏–Ω–∞–ª ===
echo
echo "üéâ === –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ ==="
echo "üìÇ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –±—ç–∫–∞–ø: $(basename "$SELECTED_BACKUP")"