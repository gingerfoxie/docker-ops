#!/bin/bash

# –£–º–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Docker-—Å–µ—Ä–≤–∏—Å–∞ —Å –±—ç–∫–∞–ø–æ–º volume
# –ò–º—è –±—ç–∫–∞–ø–∞: <volume_name>_<timestamp>.tar.gz
# –ò—Å–ø–æ–ª—å–∑—É–µ—Ç docker-compose —Å —è–≤–Ω—ã–º —É–∫–∞–∑–∞–Ω–∏–µ–º –ø—Ä–æ–µ–∫—Ç–∞

set -euo pipefail

# === –ù–ê–°–¢–†–û–ô–ö–ê: –£–∫–∞–∂–∏—Ç–µ –∏–º—è –ø—Ä–æ–µ–∫—Ç–∞ Docker Compose ===
PROJECT_NAME="my_project"
# ===================================================

usage() {
    cat <<EOF
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 --service <–∏–º—è_—Å–µ—Ä–≤–∏—Å–∞> --compose <–ø—É—Ç—å_–∫_docker-compose.yml> --env <–ø—É—Ç—å_–∫_.env>

–ü—Ä–∏–º–µ—Ä:
    $0 --service my_project_frontend --compose ./docker-compose.yml --env ./.env

–û–ø—Ü–∏–∏:
    --service   –ò–º—è —Å–µ—Ä–≤–∏—Å–∞ (–∫–∞–∫ –≤ docker-compose.yml)
    --compose   –ü—É—Ç—å –∫ docker-compose.yml
    --env       –ü—É—Ç—å –∫ .env —Ñ–∞–π–ª—É
    --help      –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
EOF
    exit 1
}

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
SERVICE_NAME=""
COMPOSE_FILE=""
ENV_FILE=""

# –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
TEMP=$(getopt -o '' --long service:,compose:,env:,help -- "$@")
if [ $? -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --help."
    exit 1
fi

eval set -- "$TEMP"

while true; do
    case "$1" in
        --service)
            SERVICE_NAME="$2"
            shift 2
            ;;
        --compose)
            COMPOSE_FILE="$2"
            shift 2
            ;;
        --env)
            ENV_FILE="$2"
            shift 2
            ;;
        --help)
            usage
            ;;
        --)
            shift
            break
            ;;
        *)
            echo "‚ùå –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞!"
            exit 1
            ;;
    esac
done

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
if [ -z "$SERVICE_NAME" ] || [ -z "$COMPOSE_FILE" ] || [ -z "$ENV_FILE" ]; then
    echo "‚ùå –í—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã."
    usage
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤
for file in "$COMPOSE_FILE" "$ENV_FILE"; do
    if [ ! -f "$file" ]; then
        echo "‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $file"
        exit 1
    fi
done

# –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –±—ç–∫–∞–ø–æ–≤
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
BACKUP_BASE_DIR="$SCRIPT_DIR/backups"
BACKUP_SERVICE_DIR="$BACKUP_BASE_DIR/$SERVICE_NAME"
TIMESTAMP=$(date +%Y%m%d_%H%M%S)
mkdir -p "$BACKUP_SERVICE_DIR"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ docker-compose —Å –æ–±—â–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
dc() {
    docker-compose -p "$PROJECT_NAME" -f "$COMPOSE_FILE" --env-file "$ENV_FILE" "$@"
}

# === –ù–∞—á–∞–ª–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è ===
echo "=== üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞: $SERVICE_NAME ==="
echo "üì¶ –ü—Ä–æ–µ–∫—Ç: $PROJECT_NAME"
echo "üìÑ Docker-compose: $COMPOSE_FILE"
echo "üîê Env —Ñ–∞–π–ª: $ENV_FILE"
echo "üíæ –ë—ç–∫–∞–ø—ã: $BACKUP_SERVICE_DIR"

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–µ—Ä–≤–∏—Å
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Å–µ—Ä–≤–∏—Å–∞ '$SERVICE_NAME'..."
dc config --services | grep -q "^$SERVICE_NAME$" || {
    echo "‚ùå –°–µ—Ä–≤–∏—Å '$SERVICE_NAME' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ docker-compose.yml"
    echo
    echo "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:"
    echo "---------------------"
    dc config --services || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–∏—Å–æ–≤."
    echo "---------------------"
    echo "üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∏–º—è —Å–µ—Ä–≤–∏—Å–∞ —É–∫–∞–∑–∞–Ω–æ —Ç–æ—á–Ω–æ (—Å —É—á—ë—Ç–æ–º - –∏ _)"
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞, –∑–∞–ø—É—â–µ–Ω –ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
dc ps "$SERVICE_NAME" >/dev/null || {
    echo "‚ùå –°–µ—Ä–≤–∏—Å '$SERVICE_NAME' –Ω–µ –∑–∞–ø—É—â–µ–Ω –∏–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –ø—Ä–æ–µ–∫—Ç–µ '$PROJECT_NAME'."
    echo "üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–∏—Å —Å–Ω–∞—á–∞–ª–∞: docker-compose -p $PROJECT_NAME up -d $SERVICE_NAME"
    exit 1
}

# –ü–æ–ª—É—á–∞–µ–º ID –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
CONTAINER_ID=$(dc ps -q "$SERVICE_NAME" | tr -d '[:space:]')
if [ -z "$CONTAINER_ID" ]; then
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è —Å–µ—Ä–≤–∏—Å–∞ '$SERVICE_NAME'"
    exit 1
fi
echo "‚úÖ –ù–∞–π–¥–µ–Ω –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä: $CONTAINER_ID"

# === –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ volume —á–µ—Ä–µ–∑ docker inspect (–Ω–∞–¥—ë–∂–Ω–æ) ===
echo "üîç –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ volume —á–µ—Ä–µ–∑ docker inspect..."

VOLUME_NAME=$(docker inspect "$CONTAINER_ID" --format '
{{- range .Mounts }}
  {{- if eq .Type "volume" }}
    {{- .Name }}
  {{- end }}
{{- end }}
' | tr -d '[:space:]' | head -n1)

if [ -n "$VOLUME_NAME" ]; then
    echo "‚úÖ –ù–∞–π–¥–µ–Ω volume: $VOLUME_NAME"
else
    echo "‚ö†Ô∏è  –ù–µ –Ω–∞–π–¥–µ–Ω–æ volume-–º–∞—É–Ω—Ç–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–º—è —Å–µ—Ä–≤–∏—Å–∞."
    VOLUME_NAME="$SERVICE_NAME"
fi

# === –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–º–µ–Ω–∏ –±—ç–∫–∞–ø–∞ ===
BACKUP_NAME="${VOLUME_NAME}_${TIMESTAMP}.tar.gz"
BACKUP_PATH="$BACKUP_SERVICE_DIR/$BACKUP_NAME"

# === –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –±—ç–∫–∞–ø ===
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–∞..."
dc stop "$SERVICE_NAME" >/dev/null 2>&1 || true

# === –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ ===
echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞: $BACKUP_NAME"
if docker export "$CONTAINER_ID" | gzip -c > "$BACKUP_PATH" 2>/dev/null; then
    echo "‚úÖ –ë—ç–∫–∞–ø —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω: $BACKUP_PATH"
else
    echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±—ç–∫–∞–ø–∞!"
    exit 1
fi

# === –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ ===
echo "üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
dc rm -f "$SERVICE_NAME" >/dev/null 2>&1 || true

# === –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–∑–∞ ===
echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–∑–∞..."
dc pull "$SERVICE_NAME"

# === –ó–∞–ø—É—Å–∫ –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ ===
echo "üöÄ –ó–∞–ø—É—Å–∫ –æ–±–Ω–æ–≤–ª—ë–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞..."
dc up -d "$SERVICE_NAME"

# === –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ ===
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞..."
sleep 3
if dc ps "$SERVICE_NAME" | grep -q "Up "; then
    echo "‚úÖ –°–µ—Ä–≤–∏—Å '$SERVICE_NAME' —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω –∏ –∑–∞–ø—É—â–µ–Ω"
else
    echo "‚ùå –°–µ—Ä–≤–∏—Å '$SERVICE_NAME' –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏:"
    dc logs "$SERVICE_NAME"
    exit 1
fi

# === –§–∏–Ω–∞–ª ===
echo
echo "üéâ === –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ ==="
echo "üíæ –ë—ç–∫–∞–ø —Å–æ—Ö—Ä–∞–Ω—ë–Ω: $BACKUP_PATH"
echo "üí° –î–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: restore-service.sh --service $SERVICE_NAME --backup '$BACKUP_PATH'"